{"version":3,"file":"static/development/pages/channels.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ChannelGrid.js","webpack:///./components/Layout.js","webpack:///./components/PodcastPlayer.js","webpack:///./components/podcastWithClick.js","webpack:///./helpers/slug.js","webpack:///./pages/_error.js","webpack:///./pages/channels.js","webpack:///./routes.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"nprogress\"","webpack:///external \"react\"","webpack:///external \"slugify\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","'use strict'\r\n//since next-routes\r\nimport { Link } from '../routes'\r\n// import Link from 'next/link'\r\nimport slug from '../helpers/slug'\r\n\r\nexport default class ChannelGrid extends React.Component {\r\n    render() {\r\n        const { channels } = this.props\r\n \r\n        return (\r\n            <div className=\"channels\">\r\n                { \r\n                    channels.map((channel) => (\r\n                        <Link route=\"channels\" params={{\r\n                            slug: slug(channel.title),\r\n                            id: channel.id\r\n                        }}>\r\n                            <a className=\"channel\" key={ channel.id }>\r\n                                <img src={ channel.urls.logo_image.original } alt=\"\"/>\r\n                                <h2>{ channel.title }</h2>\r\n                            </a>\r\n                        </Link>\r\n                    )) \r\n                }\r\n\r\n                <style jsx>{`\r\n                    header {\r\n                        color: #fff;\r\n                        background: #8756ca;\r\n                        padding: 15px;\r\n                        text-align: center;\r\n                    }\r\n                    .channels {\r\n                        display: grid;\r\n                        grid-gap: 15px;\r\n                        padding: 15px;\r\n                        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n                    }\r\n                    a.channel {\r\n                        display: block;\r\n                        margin-bottom: 0.5em;\r\n                        color: #333;\r\n                        text-decoration: none;\r\n                    }\r\n                    .channel img {\r\n                        border-radius: 3px;\r\n                        box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\r\n                        width: 100%;\r\n                    }\r\n                    h2 {\r\n                        padding: 5px;\r\n                        font-size: 0.9em;\r\n                        font-weight: 600;\r\n                        margin: 0;\r\n                        text-align: center;\r\n                    }  \r\n                `}</style>\r\n            </div>            \r\n        )\r\n    }\r\n}","'use strict'\r\n\r\nimport Link from 'next/link'\r\nimport Head from 'next/head'\r\nimport NProgress from 'nprogress'\r\nimport Router from 'next/router'\r\n\r\nRouter.onRouteChangeStart = (url) => {\r\n    NProgress.start()\r\n}\r\nRouter.onRouteChangeComplete = () => NProgress.done()\r\nRouter.onRouterChangeError = () => NProgress.done()\r\n\r\nexport default class Layout extends React.Component {\r\n    render() {\r\n        const { children, title } = this.props\r\n\r\n        return (\r\n            <div>\r\n                <Head>\r\n                    <title>{title}</title>\r\n                </Head>\r\n\r\n                <header><Link href=\"/\"><a>Podcast</a></Link></header>\r\n\r\n                { children }\r\n                <style jsx>{`\r\n                    header {\r\n                        color: #fff;\r\n                        background: #8756ca;\r\n                        padding: 15px;\r\n                        text-align: center;\r\n                    } \r\n                    header a {\r\n                        color:#ffffff;\r\n                    }  \r\n                `}</style>\r\n                <style jsx global>{`\r\n                    body {\r\n                        margin: 0;\r\n                        font-family: system-ui;\r\n                        background: white;\r\n                    }\r\n                    #nprogress {\r\n                        pointer-events: none;\r\n                    }\r\n\r\n                    #nprogress .bar {\r\n                        background: #29d;\r\n\r\n                        position: fixed;\r\n                        z-index: 1031;\r\n                        top: 0;\r\n                        left: 0;\r\n\r\n                        width: 100%;\r\n                        height: 2px;\r\n                    }\r\n\r\n                    /* Fancy blur effect */\r\n                    #nprogress .peg {\r\n                        display: block;\r\n                        position: absolute;\r\n                        right: 0px;\r\n                        width: 100px;\r\n                        height: 100%;\r\n                        box-shadow: 0 0 10px #29d, 0 0 5px #29d;\r\n                        opacity: 1.0;\r\n\r\n                        -webkit-transform: rotate(3deg) translate(0px, -4px);\r\n                        -ms-transform: rotate(3deg) translate(0px, -4px);\r\n                        transform: rotate(3deg) translate(0px, -4px);\r\n                    }\r\n\r\n                    /* Remove these to get rid of the spinner */\r\n                    #nprogress .spinner {\r\n                        display: block;\r\n                        position: fixed;\r\n                        z-index: 1031;\r\n                        top: 15px;\r\n                        right: 15px;\r\n                    }\r\n\r\n                    #nprogress .spinner-icon {\r\n                        width: 18px;\r\n                        height: 18px;\r\n                        box-sizing: border-box;\r\n\r\n                        border: solid 2px transparent;\r\n                        border-top-color: #29d;\r\n                        border-left-color: #29d;\r\n                        border-radius: 50%;\r\n\r\n                        -webkit-animation: nprogress-spinner 400ms linear infinite;\r\n                        animation: nprogress-spinner 400ms linear infinite;\r\n                    }\r\n\r\n                    .nprogress-custom-parent {\r\n                        overflow: hidden;\r\n                        position: relative;\r\n                    }\r\n\r\n                    .nprogress-custom-parent #nprogress .spinner,\r\n                    .nprogress-custom-parent #nprogress .bar {\r\n                        position: absolute;\r\n                    }\r\n\r\n                    @-webkit-keyframes nprogress-spinner {\r\n                        0%   { -webkit-transform: rotate(0deg); }\r\n                        100% { -webkit-transform: rotate(360deg); }\r\n                    }\r\n                    @keyframes nprogress-spinner {\r\n                        0%   { transform: rotate(0deg); }\r\n                        100% { transform: rotate(360deg); }\r\n                    }\r\n\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }    \r\n}","'use strict'\r\n\r\n\r\nexport default class PodcastPlayer extends React.Component {\r\n    render() {\r\n        const { clip, onClose } = this.props\r\n\r\n        return (\r\n            <div className='clip'>\r\n                <nav>\r\n                   <a \r\n                    onClick={onClose} \r\n                    className='close'>&lt; Volver</a>\r\n                </nav>\r\n\r\n                <picture>\r\n                    <div style={{ backgroundImage: `url(${clip.urls.image || clip.channel.urls.logo_image.original})` }} />\r\n                </picture>\r\n\r\n                <div className='player'>\r\n                    <h3>{ clip.title }</h3>\r\n                    <h6>{ clip.channel.title }</h6>\r\n                    <audio controls autoPlay={true}>\r\n                    <source src={clip.urls.high_mp3} type='audio/mpeg' />\r\n                    </audio>\r\n                </div>\r\n\r\n                <style jsx>{`\r\n                    nav {\r\n                        background: none;\r\n                    }\r\n                    nav a {\r\n                        display: inline-block;\r\n                        padding: 15px;\r\n                        color: white;\r\n                        cursor: pointer;\r\n                        text-decoration: none;\r\n                    }\r\n                    .clip {\r\n                        display: flex;\r\n                        height: 100%;\r\n                        flex-direction: column;\r\n                        background: #8756ca;\r\n                        color: white;\r\n                    }\r\n                    picture {\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        flex: 1 1;\r\n                        flex-direction: column;\r\n                        width: auto;\r\n                        padding: 10%;\r\n                    }\r\n                    picture div {\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        background-position: 50% 50%;\r\n                        background-size: contain;\r\n                        background-repeat: no-repeat;\r\n                    }\r\n                    .player {\r\n                        padding: 30px;\r\n                        background: rgba(0,0,0,0.3);\r\n                        text-align: center;\r\n                    }\r\n                    h3 {\r\n                        margin: 0;\r\n                    }\r\n                    h6 {\r\n                        margin: 0;\r\n                        margin-top: 1em;\r\n                    }\r\n                    audio {\r\n                        margin-top: 2em;\r\n                        width: 100%;\r\n                    }\r\n                `}</style>\r\n\r\n                <style jsx global>{`\r\n                    body {\r\n                    margin: 0;\r\n                    font-family: system-ui;\r\n                    background: white;\r\n                    }\r\n                `}</style>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","'use strict'\r\n\r\nimport Link from 'next/link'\r\nimport slug from '../helpers/slug'\r\n\r\nexport default class extends React.Component {\r\n  render() {\r\n    const { podcasts, onClickPodcast } = this.props\r\n\r\n    return <div>\r\n        { \r\n            podcasts.map((podcast) => (\r\n                <a href={`/${slug(podcast.channel.title)}.${podcast.channel.id}/${slug(podcast.title)}.${podcast.id}`}\r\n                className='podcast' key={podcast.id}\r\n                onClick={ (event) => onClickPodcast(event, podcast) }>\r\n                <h3>{ podcast.title }</h3>\r\n                <div className='meta'>\r\n                    { Math.ceil(podcast.duration / 60) } minutes\r\n                </div>\r\n                </a>)) \r\n        }\r\n\r\n      <style jsx>{`\r\n        .podcast {\r\n          display: block;\r\n          text-decoration: none;\r\n          color: #333;\r\n          padding: 15px;\r\n          border-bottom: 1px solid rgba(0,0,0,0.2);\r\n          cursor: pointer;\r\n        }\r\n        .podcast:hover {\r\n          color: #000;\r\n        }\r\n        .podcast h3 {\r\n          margin: 0;\r\n        }\r\n        .podcast .meta {\r\n          color: #666;\r\n          margin-top: 0.5em;\r\n          font-size: 0.8em;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  }\r\n}","'use strict'\r\n\r\nimport slugify from 'slugify'\r\n\r\nexport default function slug(name) {\r\n    return slugify(name, { lower: true }).replace(/[^\\w\\-]+/g, '')\r\n}","'use strict'\r\n\r\nimport Link from 'next/link'\r\nimport Layout from '../components/Layout'\r\n\r\nexport default class Error extends React.Component {\r\n    static getInitialProps({ res, err }) {\r\n      const statusCode = res ? res.statusCode : err ? err.statusCode : null;\r\n      return { statusCode }\r\n    }\r\n  \r\n    render() {\r\n        const { statusCode } = this.props\r\n      return (\r\n        <Layout title=\"Oh no :(\">\r\n            {\r\n                statusCode == 404 ?\r\n                <div className=\"message\">\r\n                    <h1>This page not exist</h1>\r\n                    <p><Link href=\"./\"><a>Go Back to Home</a></Link></p>\r\n                </div> :\r\n                <div>\r\n                    <h1>Somthing went wrong</h1>\r\n                    <p>Try to do it again</p>\r\n                </div>\r\n\r\n            }\r\n            <style jsx>{`\r\n                .message{\r\n                    padding:100px 30px;\r\n                    text-align:center;\r\n                }\r\n\r\n                a {\r\n                    color:8756ca;\r\n                }\r\n            `}</style>\r\n        </Layout>\r\n      )\r\n    }\r\n  }\r\n\r\n","'use strict'\r\n\r\nimport Link from 'next/link'\r\nimport Error from './_error'\r\nimport PodcastWithClick from '../components/podcastWithClick'\r\nimport PodcastPlayer from '../components/PodcastPlayer';\r\nimport ChannelGrid from '../components/ChannelGrid'\r\n\r\nexport default class extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            openPodcast: null\r\n        }\r\n    }\r\n    \r\n    static async getInitialProps(data) {\r\n        let query = data.query\r\n        let idChannel = query.id\r\n        // res es la respuesta de next.\r\n        let res = data.res\r\n\r\n        try {\r\n            let [ reqChannels, reqAudios, reqSeries ] = await Promise.all([\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\r\n            ])\r\n\r\n            if( reqChannels.status >= 400 ) {\r\n                // para cuestiones de SEO\r\n                res.satusCode = reqChannels.status \r\n                return { channel : null, audios : null, series : null, statusCode: reqChannels.status }\r\n            }\r\n    \r\n            // let reqChannels = await fetch(`https://api.audioboom.com/channels/${idChannel}`)\r\n            let dataChannel = await reqChannels.json()\r\n            let channel = dataChannel.body.channel\r\n    \r\n            // let reqClip = await fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\r\n            let dataAudios = await reqAudios.json()\r\n            let audios = dataAudios.body.audio_clips\r\n    \r\n            // let reqSerie = await fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\r\n            let dataSerie = await reqSeries.json()\r\n            let series = dataSerie.body.channels\r\n    \r\n            return { channel, audios, series, statusCode: 200 }\r\n\r\n        } catch (e) {\r\n            return { channel : null, audios : null, series : null, statusCode: 503 }\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    openPodcast = (event, podcast) => {\r\n        event.preventDefault()\r\n\r\n        this.setState({\r\n            openPodcast: podcast\r\n        })\r\n    }\r\n\r\n    closePodcast = (event) => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            openPodcast: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { channel, audios, series, statusCode } = this.props\r\n        const { openPodcast } = this.state\r\n\r\n        if( statusCode !== 200 ) {\r\n            return <Error statusCode={ statusCode } />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <header> {channel.title} </header>\r\n\r\n                <img className=\"banner\" src={channel.urls.banner_image.original}></img>\r\n                \r\n                {\r\n                    openPodcast && \r\n                    <div className=\"modal\">\r\n                        <PodcastPlayer \r\n                            clip={ openPodcast }\r\n                            onClose={ this.closePodcast } />\r\n                    </div>\r\n                }\r\n                <h1>{ channel.title }</h1>\r\n\r\n                <div className=\"channels\">\r\n                    {\r\n\r\n                        audios.map((clip, i) => (\r\n                            <Link href={`/podcast?idAudio=${ clip.id }`}>\r\n                                <a className=\"channel\">\r\n                                    <img src={clip.urls.image} alt=\"imagen\" />\r\n                                    <p>{clip.title}</p>\r\n                                </a>\r\n                            </Link>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                <h1>Sub-series</h1>\r\n                {\r\n                    (series.length !== 0) ?\r\n                    series.map((serie, i) => (\r\n                        <div>{serie.title}</div>\r\n                    )) :\r\n                    <p>No hay subseries para mostrar</p>    \r\n                }\r\n\r\n                <h2>Últimos podcast</h2>\r\n                <PodcastWithClick \r\n                    podcasts={ audios } \r\n                    onClickPodcast={ this.openPodcast } \r\n                    />\r\n\r\n                <style jsx>{`\r\n                    header {\r\n                        color: #fff;\r\n                        background: #8756ca;\r\n                        padding: 15px;\r\n                        text-align: center;\r\n                    }\r\n                    .banner{\r\n                        width:100%;\r\n                        height:30vh;\r\n                    }\r\n                    .channels {\r\n                        display: grid;\r\n                        grid-gap: 15px;\r\n                        padding: 15px;\r\n                        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n                    }\r\n                    a.channel {\r\n                        display: block;\r\n                        margin-bottom: 0.5em;\r\n                        color: #333;\r\n                        text-decoration: none;\r\n                        text-align:center;\r\n                    }                    \r\n                    a {\r\n                        display: block;\r\n                        margin-bottom: 0.5em;\r\n                        color: #333;\r\n                        text-decoration: none;\r\n                    }\r\n                    .channel img {\r\n                        border-radius: 3px;\r\n                        box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\r\n                        width: 100%;\r\n                    }\r\n                    h2 {\r\n                        padding: 5px;\r\n                        font-size: 0.9em;\r\n                        font-weight: 600;\r\n                        margin: 0;\r\n                        text-align: center;\r\n                    } \r\n                    .modal {\r\n                        position: fixed;\r\n                        top: 0;\r\n                        left: 0;\r\n                        right: 0;\r\n                        bottom: 0;\r\n                        z-index: 99999;\r\n                    }\r\n                `}</style>\r\n\r\n                <style jsx global>{`\r\n                    body {\r\n                        margin: 0;\r\n                        font-family: system-ui;\r\n                        background: white;\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}","'use strict'\r\n\r\nconst routes = require('next-routes')\r\n                                                \r\nmodule.exports = routes()                          \r\n.add('index')                                      \r\n.add('channels', '/:slug.:id', 'channels')                        \r\n.add('podcast', '/:slugChannel.:idChannel/:slug.:id', 'podcast')","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"nprogress\");","module.exports = require(\"react\");","module.exports = require(\"slugify\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAPA;AAFA;AAAA;AAAA;AAiDA;;;;AAtDA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqGA;;;;AA1GA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AA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","sourceRoot":""}